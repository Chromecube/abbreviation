import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'me.niklas'
version '1.0'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile 'com.github.WilliamAHartman:Jamepad:1.3.1'
    compile 'org.apache-extras.beanshell:bsh:2.0b6'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    testCompile 'junit:junit:4.12'
}

task sourcesForRelease(type: Copy) {
    from 'src/main/java'
    into 'build/filteredSrc'
    filter(ReplaceTokens, tokens: [VERSION: version, DATE: getBuildDate(), TIME: getBuildTime()])
}

static def getBuildDate() {
    return new Date().format('yyyy/MM/dd')
}

static def getBuildTime() {
    return new Date().format('HH:mm:ss')
}

compileJava {
    options.encoding = 'UTF-8'
    source = sourcesForRelease.destinationDir
    classpath = sourceSets.main.compileClasspath
    dependsOn sourcesForRelease
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from "${buildDir}/filteredSrc"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding = 'UTF-8'
}

jar {
    archiveBaseName = project.name
    manifest {
        attributes('Implementation-Version': version, 'Main-Class': 'me.niklas.abbreviation.Main')
    }
    archiveClassifier = 'stripped'
}

shadowJar {
    archiveClassifier = ''
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn shadowJar

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    shadowJar.mustRunAfter sourcesJar
}